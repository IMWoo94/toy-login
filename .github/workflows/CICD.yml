# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle and Jacoco

on:
  push:
    branches: [ "main", "jacoco" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Git Project Clone
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build
      - name: ÌÖåÏä§Ìä∏ Ïª§Î≤ÑÎ¶¨ÏßÄÎ•º PRÏóê ÏΩîÎ©òÌä∏Î°ú Îì±Î°ùÌï©ÎãàÎã§
        id: jacoco
        uses: madrapps/jacoco-report@v1.2
        with:
          title: üìù ÌÖåÏä§Ìä∏ Ïª§Î≤ÑÎ¶¨ÏßÄ Î¶¨Ìè¨Ìä∏ÏûÖÎãàÎã§
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.SECRET }}
          min-coverage-overall: 50
          min-coverage-changed-files: 50
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: toy-login-artifact
          path: build/libs/*.jar

  deploy:
    needs: build

    if: github.event_name != 'pull_request'

    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: toy-login-artifact
      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Github actions IP
        run: |
          echo $GITHUB_ACTIONS_IP
        env:
          GITHUB_ACTIONS_IP: ${{ steps.ip.outputs.ipv4 }}
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.TOY_LOGIN_SSH_PRIVATE_KEY }}
      - name: SSH known_hosts read before
        run: |
          cat /home/runner/.ssh/known_hosts
      - name: SCP transfer
        run: scp -v -P ${{ secrets.SERVER_PORT }} -o StrictHostKeyChecking=no *.jar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/test/login.jar
      - name: SSH known_hosts read after
        run: |
          cat /home/runner/.ssh/known_hosts
      - name: executing remote ssh commands server stop and restart
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.TOY_LOGIN_SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /home/test
            chmod +x ./login_deploy.sh
            sudo ./login_deploy.sh

# git main test
#      - name: Display structure of downloaded files
#        run: |
#          ls -R
#          echo ${{steps.download.outputs.download-path}}
#        working-directory: /home/runner/work/toy-login/test
#      - name: copy file to server
#        uses: appleboy/scp-action@v0.1.4
#        with:
#          host: ${{ secrets.SERVER_IP }}
#          username: ${{ secrets.SERVER_USER }}
#          key: ${{ secrets.TOY_LOGIN_SSH_PRIVATE_KEY }}
#          port: ${{ secrets.SERVER_PORT }}
#          source: "./*.jar"
#          target: "/home/project"
#          script: |
#            pwd
#            ls -all
#      - name: executing remote ssh commands server stop and restart
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SERVER_IP }}
#          username: ${{ secrets.SERVER_USER }}
#          key: ${{ secrets.TOY_LOGIN_SSH_PRIVATE_KEY }}
#          port: ${{ secrets.SERVER_PORT }}
#          script: |
#            cd /home/project
#            sh deploy.sh